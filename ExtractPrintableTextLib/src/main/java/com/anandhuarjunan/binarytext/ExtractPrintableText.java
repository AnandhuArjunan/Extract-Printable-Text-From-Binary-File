/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.anandhuarjunan.binarytext;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

public class ExtractPrintableText {

	private ExtractPrintableText() {}
    private static int minLength = 4;

    public static String extract(String file) throws  IOException {
        return process(new FileInputStream(file));
    }
	  /**
	   * Return true if the character is printable IN ASCII. Not using
	   * Character.isLetterOrDigit(); applies to all unicode ranges
	   */
	  private static boolean isStringChar(char ch) {
	    if (ch >= 'a' && ch <= 'z')
	      return true;
	    if (ch >= 'A' && ch <= 'Z')
	      return true;
	    if (ch >= '0' && ch <= '9')
	      return true;
	    switch (ch) {
	    case '/':
	    case '-':
	    case ':':
	    case '.':
	    case ',':
	    case '_':
	    case '$':
	    case '%':
	    case '\'':
	    case '(':
	    case ')':
	    case '[':
	    case ']':
	    case '<':
	    case '>':
	      return true;
	     default:
	 	    return false;
	    }
	  }

	  /** Process one file
	 * @throws IOException */
	  private static String process( InputStream inStream) throws IOException {

	      int i;
	      char ch;

	      // This line alone cuts the runtime by about 66% on large files.
	      BufferedInputStream is = new BufferedInputStream(inStream);

	      StringBuilder sb = new StringBuilder();

	      // Read a byte, cast it to char, check if part of printable string.
	      while ((i = is.read()) != -1) {
	        ch = (char) i;
	        if (isStringChar(ch) || (sb.length() > 0 && ch == ' '))
	          // If so, build up string.
	          sb.append(ch);
	        else {
	          // if not, see if anything to output.
	          if (sb.length() == 0)
	            continue;
	          if (sb.length() >= minLength) {
	             return sb.toString();
	          }
	          sb.setLength(0);
	        }
	      }
	      is.close();

	    return "";
	  }




}
